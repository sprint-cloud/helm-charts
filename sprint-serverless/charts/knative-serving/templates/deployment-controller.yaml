apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.14.1
spec:
  selector:
    matchLabels:
      app: controller
  template:
    metadata:
      labels:
        app: controller
        app.kubernetes.io/component: controller
        app.kubernetes.io/name: knative-serving
        app.kubernetes.io/version: 1.14.1
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: controller
              topologyKey: kubernetes.io/hostname
            weight: 100
      serviceAccountName: controller
      containers:
      - name: controller
        image: gcr.io/knative-releases/knative.dev/serving/cmd/controller@sha256:2948cacc3477dc46af2ab5013c12ba724691a626815af2af3aa201ec6812a3ff
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 1000m
            memory: 1000Mi
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONFIG_LOGGING_NAME
          value: config-logging
        - name: CONFIG_OBSERVABILITY_NAME
          value: config-observability
        - name: METRICS_DOMAIN
          value: knative.dev/internal/serving
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          capabilities:
            drop:
            - ALL
          seccompProfile:
            type: RuntimeDefault
        livenessProbe:
          httpGet:
            path: /health
            port: probes
            scheme: HTTP
          periodSeconds: 5
          failureThreshold: 6
        readinessProbe:
          httpGet:
            path: /readiness
            port: probes
            scheme: HTTP
          periodSeconds: 5
          failureThreshold: 3
        ports:
        - name: metrics
          containerPort: 9090
        - name: profiling
          containerPort: 8008
        - name: probes
          containerPort: 8080
